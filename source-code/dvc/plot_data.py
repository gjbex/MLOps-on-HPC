#!/usr/bin/env python3

# Python script to plot the data generated by `generate_data.py`.
# It takes the following command line arguments:
# --data: Path to the data file (default: 'data/data.csv')
# --output: Path to save the plot, if given, otherwise shows the plot

import argparse
import pandas as pd
import matplotlib.pyplot as plt
from utils import load_csv

def parse_args():
    parser = argparse.ArgumentParser(description="Plot the data generated by generate_data.py.")
    parser.add_argument('--data', type=str, default='data/data.csv', help='Path to the data file')
    parser.add_argument('--output', type=str, help='Path to save the plot, if given')
    return parser.parse_args()

def plot_data(data_file, output_file=None):
    # Load the data
    data = load_csv(data_file, dtype={'A': 'float64', 'B': 'float64', 'R': 'int'})
    
    # Plot the data
    plt.figure(figsize=(10, 6))
    plt.scatter(data['A'], data['B'], c=data['R'], cmap='coolwarm', alpha=0.7)
    plt.xlabel('A')
    plt.ylabel('B')
    
    # Save or show the plot
    if output_file:
        plt.savefig(output_file)
        print(f"Plot saved to {output_file}")
    else:
        plt.show()

def main():
    args = parse_args()
    plot_data(args.data, args.output)

if __name__ == "__main__":
    main()
